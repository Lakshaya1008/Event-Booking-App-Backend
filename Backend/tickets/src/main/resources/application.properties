spring.application.name=tickets

# ===============================
# Database Configuration (Render Compatible)
# ===============================
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/Event_Booking_App_db}
spring.datasource.username=${DB_USER:postgres}
spring.datasource.password=${DB_PASSWORD:your_password_here}

# ===============================
# JPA / Hibernate
# ===============================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${SPRING_JPA_FORMAT_SQL:false}

# ===============================
# Server Configuration (Render Compatible)
# ===============================
server.port=${PORT:8081}

# ===============================
# Keycloak Configuration (Environment Driven)
# ===============================
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_URL:http://localhost:9090}/realms/event-ticket-platform

# ===============================
# Security Configuration
# ===============================
# Note: For production, use environment variables:
# DB_PASSWORD=your_actual_password
# KEYCLOAK_URL=your_keycloak_server

# ===============================
# Actuator Configuration
# ===============================
# Expose useful endpoints for monitoring
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.info.env.enabled=true

# Custom application info
info.app.name=Event Booking App
info.app.description=Backend API for Event Ticket Booking Platform
info.app.version=@project.version@
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@
